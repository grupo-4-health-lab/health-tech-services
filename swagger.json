{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Health Tech Services",
    "description": "Descrição dos serviços de API Health Tech",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Status",
      "description": "Status do servidor"
    },
    {
      "name": "Autenticação",
      "description": "Endpoints para geração e atualização do token JWT"
    },
    {
      "name": "Colaboradores",
      "description": "Endpoints de CRUD de colaboradores"
    },
    {
      "name": "Vacinas",
      "description": "Endpoints de CRUD de vacinas"
    },
    {
      "name": "Reuniões CIPA",
      "description": "Endpoints de CRUD de reuniões CIPA"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "Bearer": {
      "name": "Authorization",
      "in": "header",
      "description": "Token JWT - (Ex: 'Bearer XXXXXXXXXXXXXXXXXX')",
      "required": true,
      "type": "string",
      "default": "Bearer "
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Testa o status do servidor",
        "responses": {
          "200": {
            "description": "Resposta de sucesso",
            "schema": {
              "example": "Online"
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "Autenticação"
        ],
        "summary": "Gera token de autenticação JWT",
        "parameters": [
          {
            "name": "collaborator",
            "in": "body",
            "description": "Dados do colaborador",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Token gerado com sucesso",
            "schema": {
              "$ref": "#/definitions/AuthResult"
            }
          },
          "400": {
            "description": "Requisição mal formatada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Autenticação incorreta",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": [
          "Autenticação"
        ],
        "summary": "Atualiza token de autenticação JWT",
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          },
          {
            "name": "token",
            "in": "body",
            "description": "Token de atualização",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthRefresh"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Token gerado com sucesso",
            "schema": {
              "$ref": "#/definitions/AuthResult"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collaborators": {
      "get": {
        "tags": [
          "Colaboradores"
        ],
        "summary": "Lista todos colaboradores do sistema",
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Collaborator"
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Cria um novo usuário - Apenas Administradores",
        "tags": [
          "Colaboradores"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Colaborador",
            "schema": {
              "$ref": "#/definitions/Collaborator"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Colaborador criado com sucesso",
            "schema": {
              "$ref": "#/definitions/CollaboratorResult"
            }
          },
          "400": {
            "description": "Requisição mal formatada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Falta de permissão",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collaborators/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Id do Colaborador",
          "type": "integer"
        }
      ],
      "get": {
        "summary": "Busca um colaborador pelo ID",
        "tags": [
          "Colaboradores"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          }
        ],
        "responses": {
          "200": {
            "description": "Busca feita com sucesso",
            "schema": {
              "$ref": "#/definitions/Collaborator"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualiza um colaborador pelo ID",
        "tags": [
          "Colaboradores"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Colaborador",
            "schema": {
              "$ref": "#/definitions/Collaborator"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Atualizado com sucesso"
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Exclui um colaborador pelo ID - Apenas Administradores",
        "tags": [
          "Colaboradores"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          }
        ],
        "responses": {
          "204": {
            "description": "Excluído com sucesso"
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Falta de permissão",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Não encontrado"
          }
        }
      }
    },
    "/vaccines": {
      "get": {
        "tags": [
          "Vacinas"
        ],
        "summary": "Lista todos vacinas do sistema",
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vaccine"
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Cria uma nova vacina",
        "tags": [
          "Vacinas"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Vacina",
            "schema": {
              "$ref": "#/definitions/Vaccine"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Vacina criada com sucesso",
            "schema": {
              "$ref": "#/definitions/DefaultResult"
            }
          },
          "400": {
            "description": "Requisição mal formatada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/vaccines/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Id da vacina",
          "type": "integer"
        }
      ],
      "get": {
        "summary": "Busca uma vacina pelo ID",
        "tags": [
          "Vacinas"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          }
        ],
        "responses": {
          "200": {
            "description": "Busca feita com sucesso",
            "schema": {
              "$ref": "#/definitions/Vaccine"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualiza uma vacina pelo ID",
        "tags": [
          "Vacinas"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Vacina",
            "schema": {
              "$ref": "#/definitions/Vaccine"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Atualizado com sucesso"
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Exclui uma vacina pelo ID",
        "tags": [
          "Vacinas"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          }
        ],
        "responses": {
          "204": {
            "description": "Excluído com sucesso"
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Não encontrado"
          }
        }
      }
    },
    "/cipa-meetings": {
      "get": {
        "tags": [
          "Reuniões CIPA"
        ],
        "summary": "Lista todas reuniões CIPA do sistema",
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Meeting"
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Cria uma nova reunião CIPA",
        "tags": [
          "Reuniões CIPA"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Reunião CIPA",
            "schema": {
              "$ref": "#/definitions/Meeting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Reunião CIPA criada com sucesso",
            "schema": {
              "$ref": "#/definitions/DefaultResult"
            }
          },
          "400": {
            "description": "Requisição mal formatada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cipa-meetings/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Id da reunião CIPA",
          "type": "integer"
        }
      ],
      "get": {
        "summary": "Busca uma reunião CIPA pelo ID",
        "tags": [
          "Reuniões CIPA"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          }
        ],
        "responses": {
          "200": {
            "description": "Busca feita com sucesso",
            "schema": {
              "$ref": "#/definitions/Meeting"
            }
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualiza uma reunião CIPA pelo ID",
        "tags": [
          "Reuniões CIPA"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Reunião CIPA",
            "schema": {
              "$ref": "#/definitions/Meeting"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Atualizado com sucesso"
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Exclui uma reunião CIPA pelo ID",
        "tags": [
          "Reuniões CIPA"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Bearer"
          }
        ],
        "responses": {
          "204": {
            "description": "Excluído com sucesso"
          },
          "401": {
            "description": "Não autorizado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Não encontrado"
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "Auth": {
      "required": [
        "email",
        "senha"
      ],
      "properties": {
        "email": {
          "type": "string",
          "description": "Email do colaborador",
          "example": "admin@admin.com"
        },
        "senha": {
          "type": "string",
          "description": "Senha do colaborador",
          "example": "12345"
        }  
      }
    },
    "AuthRefresh": {
      "properties": {
        "refreshToken": {
          "type": "string",
          "description": "Token de atualização"
        }  
      }
    },
    "AuthResult": {
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "Token de autenticação"
        },
        "refreshToken": {
          "type": "string",
          "description": "Token de atualização"
        }  
      }
    },
    "Collaborator": {
      "required": [
        "permissao",
        "nome",
        "sexo",
        "rg",
        "orgao_expedidor",
        "uf_rg",
        "cpf",
        "email",
        "unidade",
        "matricula",
        "codigo_interno",
        "situacao",
        "etnia",
        "pcd"
      ],
      "properties": {
        "permissao": {
          "type": "integer",
          "description": "Nível de permissão (1 - Padrão/2 - Administrador)",
          "example": "1"
        },
        "nome": {
          "type": "string",
          "description": "Nome",
          "example": "João da Silva"
        },
        "sexo": {
          "type": "string",
          "description": "Sexo (1 - Masculino/2 - Feminino)",
          "example": "1"
        },
        "rg": {
          "type": "string",
          "description": "Número do RG",
          "example": "11111111"
        },
        "orgao_expedidor": {
          "type": "string",
          "description": "Orgão Expeditor do RG",
          "example": "MG-SSP"
        },
        "uf_rg": {
          "type": "string",
          "description": "Estado do RG",
          "example": "MG"
        },
        "cpf": {
          "type": "string",
          "description": "CPF",
          "example": "11111111111"
        },
        "email": {
          "type": "string",
          "description": "Email",
          "example": "teste2@teste.com"
        },
        "unidade": {
          "type": "string",
          "description": "Unidade",
          "example": "Bandeirantes"
        },
        "matricula": {
          "type": "string",
          "description": "Número da matrícula",
          "example": "1"
        },
        "codigo_interno": {
          "type": "string",
          "description": "Código interno",
          "example": "1"
        },
        "situacao": {
          "type": "string",
          "description": "Situação (1 - Ativo/2 - Inativo)",
          "example": "1"
        },
        "etnia": {
          "type": "string",
          "description": "Etnia (1 - Branco/2 - Negro/3 - Pardo/4 - Mulato/5 - Amarelo/6 - Indígena)",
          "example": "3"
        },
        "pcd": {
          "type": "boolean",
          "description": "Tem PCD",
          "example": "false"
        },
        "centro_custo": {
          "type": "string",
          "description": "Centro de Custo",
          "example": "0"
        },
        "data_nascimento": {
          "type": "string",
          "description": "Data de Nascimento (YYYY-MM-DD)",
          "example": "1999-07-24"
        },
        "pis_pasep": {
          "type": "string",
          "description": "PIS/PASEP",
          "example": "11111111111"
        },
        "ctps": {
          "type": "string",
          "description": "CTPS",
          "example": "1111111"
        },
        "exped_ctps": {
          "type": "string",
          "description": "Data de Expedição CTPS (YYYY-MM-DD)",
          "example": "2017-01-14"
        },
        "serie_ctps": {
          "type": "string",
          "description": "Série do CTPS",
          "example": "1111"
        },
        "uf_ctps": {
          "type": "string",
          "description": "Estado de Emissão CTPS",
          "example": "MG"
        },
        "setor": {
          "type": "string",
          "description": "Setor",
          "example": "1"
        },
        "logradouro": {
          "type": "string",
          "description": "Logradouro",
          "example": "Avenida do Contorno"
        },
        "bairro": {
          "type": "string",
          "description": "Bairro",
          "example": "Savassi"
        },
        "cidade": {
          "type": "string",
          "description": "Cidade",
          "example": "Belo Horizonte"
        },
        "uf": {
          "type": "string",
          "description": "Estado",
          "example": "MG"
        },
        "cep": {
          "type": "string",
          "description": "CEP",
          "example": "30000000"
        },
        "telefone": {
          "type": "string",
          "description": "Telefone",
          "example": "31900000000"
        },
        "naturalidade": {
          "type": "string",
          "description": "Naturalidade",
          "example": "Belo Horizonte"
        },
        "nome_mae": {
          "type": "string",
          "description": "Nome da mãe",
          "example": "Joaquina dos Santos"
        },
        "nome_pai": {
          "type": "string",
          "description": "Nome do pai",
          "example": "Reinaldo Amado"
        },
        "id_empresa": {
          "type": "integer",
          "description": "ID da Empresa",
          "example": "1"
        },
        "nome_empresa": {
          "type": "string",
          "description": "Nome da Empresa",
          "example": "Teste Inc."
        },
        "id_cargo": {
          "type": "integer",
          "description": "ID do Cargo",
          "example": "1"
        },
        "nome_cargo": {
          "type": "string",
          "description": "Nome do Cargo",
          "example": "Estagiário Administração"
        },
        "data_rescisao": {
          "type": "string",
          "description": "Data de Rescisão (YYYY-MM-DD)",
          "example": "2018-09-21"
        },
        "descricao": {
          "type": "string",
          "description": "Descrição",
          "example": "Estagiário #132"
        },
        "tipo_pcd": {
          "type": "string",
          "description": "Tipo de PCD",
          "example": "Nenhuma"
        },
        "cbo": {
          "type": "string",
          "description": "CBO",
          "example": "39410"
        },
        "ccbo_2002": {
          "type": "string",
          "description": "CCBO Modelo 2002",
          "example": "422105"
        },
        "codigo_filial": {
          "type": "string",
          "description": "Código da Filial",
          "example": "1"
        },
        "nome_filial": {
          "type": "string",
          "description": "Nome da Filial",
          "example": "Escritório São Lucas"
        },
        "bairro_filial": {
          "type": "string",
          "description": "Bairro da Filial",
          "example": "São Lucas"
        },
        "estado_filial": {
          "type": "string",
          "description": "Estado da Filial",
          "example": "MG"
        },
        "cep_filial": {
          "type": "string",
          "description": "CEP da Filial",
          "example": "30000000"
        },
        "cnpj_filial": {
          "type": "string",
          "description": "CNPJ da Filial",
          "example": "11111111111111"
        },
        "telefone_filial": {
          "type": "string",
          "description": "Telefone da Filial",
          "example": "31900000000"
        }
      }
    },
    "CollaboratorResult": {
      "properties": {
        "id": {
          "type": "integer",
          "description": "Id do colaborador",
          "example": "1"
        },
        "message": {
          "type": "string",
          "description": "Mensagem de sucesso",
          "example": "Colaborador 'João da Silva' adicionado com sucesso."
        },
        "password": {
          "type": "string",
          "description": "Senha gerada para o colaborador",
          "example": "c3887965"
        }
      }
    },
    "Meeting": {
      "required": [
        "nome",
        "descricao",
        "data",
        "tipo"
      ],
      "properties": {
        "nome": {
          "type": "string",
          "description": "Nome da Reunião",
          "example": "Eleição"
        },
        "descricao": {
          "type": "string",
          "description": "Descrição",
          "example": "Ata de Eleição do Coordenador"
        },
        "data": {
          "type": "string",
          "description": "Data da Reunião",
          "example": "2021-07-07"
        },
        "tipo": {
          "type": "string",
          "description": "Tipo da Reunião (1 - Ata de Eleição/2 - Ata de Instalação/3 - Ata de Posse/4 - Ata de Reunião Ordinária/5 - Ata de Reunião Extraordinária)",
          "example": "1"
        } 
      }
    },
    "Vaccine": {
      "required": [
        "nome",
        "esquema",
        "data_vacinacao",
        "imunidade"
      ],
      "properties": {
        "nome": {
          "type": "string",
          "description": "Nome da Doença",
          "example": "Hepatite B"
        },
        "esquema": {
          "type": "string",
          "description": "Esquema da Vacina",
          "example": "Adultos sem comprovação de vacinação contra Hepatite B, devem receber o esquema completo, de 3 doses. A 2a dose deve ser dada 30 dias após a 1a dose, e a 3a dose 180 dias após a 1a dose Adultos com esquema incompleto (apenas 1 ou 2 doses), devem completar o esquema. NÃO REINICIAR O ESQUEMA."
        },
        "data_vacinacao": {
          "type": "string",
          "description": "Data da Vacinação (YYYY-MM-DD)",
          "example": "2021-07-11"
        },
        "imunidade": {
          "type": "boolean",
          "description": "Gera imunidade",
          "example": "false"
        } 
      }
    },
    "DefaultResult": {
      "properties": {
        "id": {
          "type": "integer",
          "description": "Id",
          "example": "1"
        },
        "message": {
          "type": "string",
          "description": "Mensagem de sucesso",
          "example": "Entidade adicionada com sucesso."
        }
      }
    }
  }
}